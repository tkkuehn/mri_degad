# ---- begin snakebids boilerplate ----------------------------------------------

from snakebids import bids, generate_inputs, get_wildcard_constraints


configfile: workflow.source_path("../config/snakebids.yml")


# Get input wildcards
inputs = generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybids_database_dir=config.get("pybids_db_dir"),
    pybids_reset_database=config.get("pybids_db_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
)


# this adds constraints to the bids naming
wildcard_constraints:
    **get_wildcard_constraints(config["pybids_inputs"]),


# ---- end snakebids boilerplate ------------------------------------------------


rule resample:
    input:
        raw=inputs["gad"].path,
    output:
        resampled=bids(
            root=str(Path(config["out_dir"]) / "derivatives" / "resampled"),
            acquisition="gad",
            datatype="anat",
            desc="resampled",
            suffix="T1w.nii.gz",
            **inputs["gad"].wildcards
        ),
    log:
        bids(root="logs", suffix="resample.log", **inputs["gad"].wildcards),
    shell:
        "scripts/resample.py"


rule all:
    input:
        inputs["gad"].expand(
            rules.resample.output,
        ),
    default_target: True
